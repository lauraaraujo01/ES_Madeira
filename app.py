import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import networkx as nx
from shapely.wkt import loads as load_wkt
import io

from grafoPropriedades import construir_grafo_propriedades, desenhar_grafo_propriedades
from grafoProprietarios import construir_grafo_proprietarios, desenhar_grafo_proprietarios
from areaMediaPropriedades5 import calcular_area_media
from areaMediaPropriedades3 import calcular_area_media_simples
from sugestoesTroca import sugerir_trocas

# Inicializar vari√°veis persistentes
if "grafo_propriedades_fig" not in st.session_state:
    st.session_state.grafo_propriedades_fig = None

if "grafo_proprietarios_fig" not in st.session_state:
    st.session_state.grafo_proprietarios_fig = None

if "ultima_media_calculada" not in st.session_state:
    st.session_state.ultima_media_calculada = None

if "ultima_media_calculada_simples" not in st.session_state:
    st.session_state.ultima_media_calculada_simples = None    

# Resetar se for trocar de ficheiro
if "trocar_ficheiro" in st.session_state and st.session_state.trocar_ficheiro:
    st.session_state.grafo_propriedades_fig = None
    st.session_state.grafo_proprietarios_fig = None
    st.session_state.ultima_media_calculada = None

st.set_page_config(page_title="Gest√£o do Territ√≥rio", layout="wide")
st.title(" Sistema de Apoio √† Decis√£o - Gest√£o do Territ√≥rio")

st.sidebar.title(" Navega√ß√£o")
opcao = st.sidebar.radio("Ir para:", [
    "üìÇ Carregar Dados",
    "üìà Grafo de Propriedades",
    "üë• Grafo de Propriet√°rios",
    "üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo",
    "üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo com √Åreas Adjacentes",
    "üîÑ Sugest√µes de Troca"
])

if "propriedades" not in st.session_state:
    st.session_state.propriedades = []

if opcao == "üìÇ Carregar Dados":
    st.header("üìÇ Carregar Ficheiro CSV com Geometria")

    if "csv_buffer" not in st.session_state:
        st.session_state.csv_buffer = None

    if "trocar_ficheiro" not in st.session_state:
        st.session_state.trocar_ficheiro = False

    if st.session_state.csv_buffer and not st.session_state.trocar_ficheiro:
        st.success("‚úÖ Ficheiro j√° carregado anteriormente.")
        if st.button(" Carregar novo ficheiro"):
            st.session_state.trocar_ficheiro = True
    else:
        ficheiro = st.file_uploader("Escolha um ficheiro CSV com geometria:", type="csv")
        if ficheiro:
            try:
                conteudo = ficheiro.read().decode("utf-8")
                st.session_state.csv_buffer = conteudo
                st.session_state.trocar_ficheiro = False

                df = pd.read_csv(io.StringIO(conteudo), delimiter=';')

                propriedades = []
                for _, linha in df.iterrows():
                    try:
                        geom = load_wkt(linha["geometry"])
                        propriedades.append({
                            "PAR_ID": linha["PAR_ID"],
                            "OWNER": linha["OWNER"],
                            "Freguesia": linha["Freguesia"],
                            "Municipio": linha["Municipio"],
                            "Ilha": linha["Ilha"],
                            "geometry": geom,
                            "area": geom.area,
                            "perimetro": geom.length
                        })
                    except:
                        continue

                st.session_state.propriedades = propriedades
                st.success(f"‚úÖ {len(propriedades)} propriedades carregadas com sucesso.")

            except Exception as e:
                st.error(f"Erro ao carregar ficheiro: {e}")

elif opcao == "üìà Grafo de Propriedades":
    st.header("üìà Grafo de Adjac√™ncia das Propriedades")
    if st.session_state.propriedades:
        grafo = construir_grafo_propriedades(st.session_state.propriedades)
        fig = desenhar_grafo_propriedades(grafo)
        st.session_state.grafo_propriedades_fig = fig
        st.pyplot(fig)
    elif st.session_state.grafo_propriedades_fig:
        st.pyplot(st.session_state.grafo_propriedades_fig)
    else:
        st.warning("Carregue primeiro os dados no menu 'Carregar Dados'.")


elif opcao == "üë• Grafo de Propriet√°rios":
    st.header("üë• Grafo de Rela√ß√µes entre Propriet√°rios")
    if st.session_state.propriedades:
        grafo = construir_grafo_proprietarios(st.session_state.propriedades)
        fig = desenhar_grafo_proprietarios(grafo)
        st.session_state.grafo_proprietarios_fig = fig
        st.pyplot(fig)
    elif st.session_state.grafo_proprietarios_fig:
        st.pyplot(st.session_state.grafo_proprietarios_fig)
    else:
        st.warning("Carregue primeiro os dados no menu 'Carregar Dados'.")

elif opcao == "üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo com √Åreas Adjacentes":
    st.header("üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo com √Åreas Adjacentes")

    if st.session_state.propriedades:
      
        df = pd.DataFrame(st.session_state.propriedades)

        nivel = st.selectbox("Escolha o n√≠vel geogr√°fico:", ["Freguesia", "Municipio", "Ilha"])

        opcoes_nomes = df[nivel].dropna().unique()
        nome_escolhido = st.selectbox(f"Escolha o nome da {nivel.lower()}:", sorted(opcoes_nomes))

        if st.button("Calcular √°rea m√©dia"):
                media = calcular_area_media(st.session_state.propriedades, nivel, nome_escolhido)
                st.session_state.ultima_media_calculada = (nome_escolhido, nivel, media)
                st.metric(f"√Årea m√©dia em {nome_escolhido} ({nivel})", f"{media:.2f} m¬≤")
        elif st.session_state.ultima_media_calculada:
                nome_escolhido, nivel, media = st.session_state.ultima_media_calculada
                st.metric(f"√Årea m√©dia em {nome_escolhido} ({nivel})", f"{media:.2f} m¬≤")

    else:
        st.warning("Carregue primeiro os dados no menu 'Carregar Dados'.")

elif opcao == "üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo":
    st.header("üìè C√°lculo da √Årea M√©dia por N√≠vel Administrativo")

    if st.session_state.propriedades:
       
        df = pd.DataFrame(st.session_state.propriedades)

        niveis = ["Freguesia", "Municipio", "Ilha"]
        nivel = st.selectbox("Escolha o n√≠vel geogr√°fico:", niveis)

        if nivel:
            opcoes_nomes = df[nivel].dropna().unique()
            nome_escolhido = st.selectbox(f"Escolha a {nivel.lower()}:", sorted(opcoes_nomes))

            if st.button("Calcular √°rea m√©dia"):
                media = calcular_area_media_simples(st.session_state.propriedades, nivel, nome_escolhido)
                st.session_state.ultima_media_calculada_simples = (nome_escolhido, nivel, media)
                st.metric(f"√Årea m√©dia em {nome_escolhido} ({nivel})", f"{media:.2f} m¬≤")
            elif st.session_state.ultima_media_calculada_simples:
                nome_escolhido, nivel, media = st.session_state.ultima_media_calculada_simples
                st.metric(f"√Årea m√©dia em {nome_escolhido} ({nivel})", f"{media:.2f} m¬≤")
    else:
                    st.warning("Carregue primeiro os dados no menu 'Carregar Dados'.")

elif opcao == "üîÑ Sugest√µes de Troca":
    st.header("üîÑ Sugest√µes de Troca entre Propriedades")

    if st.session_state.propriedades:
        df = pd.DataFrame(st.session_state.propriedades)

        nivel = st.selectbox("Escolha o n√≠vel geogr√°fico:", ["Freguesia", "Municipio", "Ilha"])
        opcoes_nomes = df[nivel].dropna().unique()
        nome_escolhido = st.selectbox(f"Escolha a {nivel.lower()}:", sorted(opcoes_nomes))

        if st.button("Gerar Sugest√µes"):
            trocas = sugerir_trocas(st.session_state.propriedades, nivel, nome_escolhido)
            if trocas:
                for t in trocas:
                    st.success(f"Troca entre {t['de']} (prop. {t['parcela_1']}) e {t['para']} (prop. {t['parcela_2']}) | ganho: {t['ganho_area_media']:.2f} | potencial: {t['potencial']:.2f}")
            else:
                st.info("Nenhuma sugest√£o encontrada para esta regi√£o.")
    else:
        st.warning("Carregue primeiro os dados no menu 'Carregar Dados'.")
